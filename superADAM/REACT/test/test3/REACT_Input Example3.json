{
"task": {
  "method": {
    "id": "REACT",
    "type": "reverseEngineering",
    "description": "this is the reverse engineering method that uses an evolutionary algorithm as optimization method",
    "arguments": [

{"name":"HammingPolyWeight","value":0.3},
{"name":"ComplexityWeight","value":0.2},
{"name":"RevEngWeight","value":0.3},
{"name":"BioProbWeight","value":0.2},
{"name":"HammingModelWeight","value":0.35},
{"name":"PolyScoreWeight","value":0.65},
{"name":"GenePoolSize","value":2000},
{"name":"NumCandidates","value":55},
{"name":"NumParentsToPreserve","value":5},
{"name":"MaxGenerations","value":500},
{"name":"StableGenerationLimit","value":300},
{"name":"MutateProbability","value":0.75},

{"name":"priorBiologicalNetwork", 
 "value":[  [1, 0, 0, 1, 0, 0.5, 0.5, 0.5],
			[1, 0, 0, 1, 0, 0.5, 0.5, 0.5],
			[1, 0, 1, 1, 0, 0.5, 0.5, 0.5],
			[1, 1, 0, 0, 1, 0.5, 0.5, 0.5],
			[1, 0, 0, 0, 0, 0.5, 0.5, 0.5],
			[1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
			[1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],	
			[1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]]
    }]},


  "input": [{
	         "type":"model",
	         "description": "Polynomial model generated by a previously applied reverse-engineering method",
		  "name": "priorReverseEngineeringNetwork",
		 "fieldCardinality": 2,
	          "variableScores": [{
		      "target": "x1",
	              "sources": [
				{ "source": "x1", "score": 0.80 },
		        { "source": "x4", "score": 0.20 }
        	  		]
		          },
          	  	  {
		      "target": "x2",
		      "sources": [
				{ "source": "x1", "score": 0.5 },
				{ "source": "x4", "score": 0.5 }
				]
		          },
                          {
		      "target": "x3",
		      "sources": [
				{ "source": "x1", "score": 0.14 },
				{ "source": "x3", "score": 0.71 },
				{ "source": "x4", "score": 0.14 }
				]
		          },
		          {
		      "target": "x4",
		      "sources": [
				{ "source": "x1", "score": 0.2 },
				{ "source": "x2", "score": 0.4 },
				{ "source": "x5", "score": 0.66 }
				]
 		      },
 		      {
		      "target": "x5",
		      "sources": [
				{ "source": "x1", "score": 1}
				]
 		      },
 		      {
		      "target": "x6",
		      "sources": [
				{ "source": "x1", "score": 0.16 }
				]
 		      },
 		      {
		      "target": "x7",
		      "sources": [
				{ "source": "x1", "score": 0.16 },
				{ "source": "x2", "score": 0.33 },
				{ "source": "x5", "score": 0.5 }
				]
 		      },
 		      {
		      "target": "x8",
		      "sources": [
				{ "source": "x1", "score": 1 }
				]
 		      }
 		      ]
		},


	     {
	        "type":"model",
	        "description": "Polynomial model generated by a previously applied reverse-engineering method",
		  "name": "priorModel",
		 "fieldCardinality": 2,
		  "updateRules": [{
		      "target": "x1",
		      "functions": [{
		            "inputVariables": ["x1","x2"],
		            "polynomialFunction": "x1+x2"
		          }]
		          },
          	  	  {
		      "target": "x2",
		      "functions": [{
		            "inputVariables": ["x2","x3","x5"],
		            "polynomialFunction": "x3*x5+x2"
		          },
                          {
		            "inputVariables": ["x2","x3","x4","x5"],
		            "polynomialFunction": "x3*x4*x5+x2*x4"
		          }]
		          },
		          {
		      "target": "x3",
		      "functions": [{
		            "inputVariables": ["x3","x4","x6"],
		            "polynomialFunction": "x4*x6+x3"
 		          }]
 		          },
                  {
			"target":"x4",
		        "functions": [{
		            "inputVariables": ["x4","x8"],
		            "polynomialFunction": "x4+x8"
		          }]
                  },
                  {
                  "target": "x5",
		      "functions": [{
		            "inputVariables": ["x3","x5"],
		            "polynomialFunction": "x3*x5"
		          }]
		          },
		          {
		          "target": "x6",
		      "functions": [{
		            "inputVariables": ["x6"],
		            "polynomialFunction": "x6"
		          }]
		          },
		          {
		          "target": "x7",
		      "functions": [{
		            "inputVariables": ["x7"],
		            "polynomialFunction": "x7"
		          }]
		          },
		          {
		          "target": "x8",
		      "functions": [{
		            "inputVariables": ["x1","x8"],
		            "polynomialFunction": "x1+x8"
		          }]
		           } ]       
	     }, 

       		{
		   "type": "timeSeries",
	           "timeSeriesData": [{
		          "name": "wildtype experiment 1",
		          "index": [],
		          "matrix": [
		              	[0,0,1,1,1,1,1,1],
						[0,1,0,0,1,1,1,1],
						[1,1,0,1,0,1,1,1],
						[0,1,1,0,0,1,1,0],
						[1,1,1,0,0,1,1,0],
						[0,1,1,0,0,1,1,1],
						[1,1,1,1,0,1,1,1],
						[0,1,0,0,0,1,1,0],
						[1,1,0,0,0,1,1,0],
						[0,1,0,0,0,1,1,1],
						[1,1,0,1,0,1,1,1]
						]
		          },
		          {
		          "name": "wildtype experiment 2",
		          "index": [],
		          "matrix": [
		             	[0,0,1,1,1,1,0,1],
						[0,1,0,0,1,1,0,1],
						[1,1,0,1,0,1,0,1],
						[0,1,1,0,0,1,0,0],
						[1,1,1,0,0,1,0,0],
						[0,1,1,0,0,1,0,1],
						[1,1,1,1,0,1,0,1],
						[0,1,0,0,0,1,0,0],
						[1,1,0,0,0,1,0,0],
						[0,1,0,0,0,1,0,1],
						[1,1,0,1,0,1,0,1]
		            ]
		          },
		          {
		          "name": "knockout experiment 1",
		          "index": [1],
		          "matrix": [
		                [0,0,1,1,1,1,1,1],
						[0,1,0,0,1,1,1,1],
						[0,1,0,1,0,1,1,1],
						[0,1,1,0,0,1,1,1],
						[0,1,1,1,0,1,1,1],
						[0,1,0,0,0,1,1,1],
						[0,1,0,1,0,1,1,1]
		            ]
		          },
		          {
		          "name": "knockout experiment 2",
		          "index": [1],
		          "matrix": [
		                [0,0,1,1,1,1,0,1],
						[0,1,0,0,1,1,0,1],
						[0,1,0,1,0,1,0,1],
						[0,1,1,0,0,1,0,1],
						[0,1,1,1,0,1,0,1],
						[0,1,0,0,0,1,0,1],
						[0,1,0,1,0,1,0,1]
		            ]
		          },
		          {
		          "name": "knockout experiment 3",
		          "index": [2],
		          "matrix": [
		                [0,0,1,1,1,1,1,1],
						[0,0,0,0,1,1,1,1],
						[0,0,0,1,0,1,1,1],
						[0,0,1,0,0,1,1,1],
						[0,0,1,1,0,1,1,1],
						[0,0,0,0,0,1,1,1],
						[0,0,0,1,0,1,1,1]
		            ]
		          }
		        ]
		 }]
      }
	}