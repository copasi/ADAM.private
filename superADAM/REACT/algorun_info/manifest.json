{
	"algo_name": "REACT", // the name of your algorithm
	"algo_summary": "Evolutionary Algorithm for Discrete Dynamical System Optimization", // a 1-line summary of your algorithm
	"algo_description": "The inference of gene regulatory networks (GRNs) from system-level experimental observations is at the heart of systems biology due to its centrality in gaining insight into the complex regulatory mechanisms in cellular systems. This includes the inference of both the network topology and dynamic mathematical models. <br>This software contains a novel network inference algorithm within the algebraic framework of Boolean polynomial dynamical system (BPDS). The algorithm considers time series data, including that of perturbation experiments such as knock-out mutants and RNAi experiments. To infer the network topology and dynamic models, it allows for the incorporation of prior biological knowledge while being robust to significant levels of noise in the data used for inference. It uses an evolutionary algorithm for local optimization with an encoding of the mathematical models as BPDS.", // a few lines description of your algorithm (basic html accepted)
	"algo_website": "http://compsysmed.org/Software/EARevEng/REACT.html", // url where users can find more information about your algorithm
	"algo_keywords": ["reverse engineering", "cell biology"], // a list of keywords describing your algorithm
	"algo_authors": [ // a list of all the algorithm's authors
		{
			"name": "Paola Vera-Licona",
			"email": "veralicona@uchc.edu", // make sure you have a gravatar (http://gravatar.com)
			"personal_website": "http://compsysmed.org/Homepage/Welcome.html", // leave "" if not available
			"organization": "Center for Quantitative Medicine, UConn Health", // leave "" if not available
			"org_website": "http://cqm.uchc.edu/" // leave "" if not available
		},
		{
			"name": "John J. McGee",
			"email": "", // make sure you have a gravatar (http://gravatar.com)
			"personal_website": "", // leave "" if not available
			"organization": "", // leave "" if not available
			"org_website": "" // leave "" if not available
		}
	],
	"algo_exec": "ruby React.rb", // the command to start algorithm execution. AlgoRun passes the input file as the first argument
	"algo_output_filename": "output.txt", // path of the file where your algorithm outputs its results
	"algo_parameters": { // list all the parameters available for your algorithm. These parameters will be available for use in your algorithm as environment variables.
		"ComplexityWeight": "0.2",
		"RevEngWeight": "0",
		"BioProbWeight": "0",
		"HammingModelWeight": "0.35",
		"PolyScoreWeight": "0.65",
		"GenePoolSize": "100",
		"NumCandidates": "55",
		"NumParentsToPreserve": "5",
		"MaxGenerations": "100",
		"StableGenerationLimit": "50",
		"MutateProbability": "0.5"
	},
	"algo_image": "algorun/react" // Example: "ahosny/react". leave "" if you did not upload your algorithm to docker hub or if you do not know what docker hub is :).
}
