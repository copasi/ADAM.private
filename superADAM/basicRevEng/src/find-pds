#!/usr/bin/env M2 --script

load (getenv("ADAM_ROOT")|"superADAM/share/ADAM.m2")
needsPackage "PolynomialDynamicalSystems"

--path = prepend(currentDirectory()|"lib/M2code", path)
-- needsPackage("PolynomialDynamicalSystems", FileName=>"./ReverseEngineering/PolynomialDynamicalSystems.m2")
--needsPackage "JSON"

helpString = ///usage: find-pds <json-rev-eng-input-data >json-rev-eng-output-model
///

if #scriptCommandLine != 1 then (
    stderr << helpString;
    exit(1);
    )

--------------------------------
TS = readTSDataFromJSON get stdio
PDS = findPDS TS
PDS = for f in PDS list {{f,1.0}} -- hack for the moment: output file expects lists of triples of poly functinos
outputJSON = prettyPrintJSON toHashTable createRevEngJSONOutputModel PDS
<< outputJSON << endl;

end

restart
-- example:
./find-pds <../test/Gepasi-input.json
./find-pds <../test/test1-input.json >foo-1
./find-pds help

restart
load (getenv("ADAM_ROOT")|"superADAM/share/ADAM.m2")
needsPackage "PolynomialDynamicalSystems"
TS = readTSDataFromJSON get "../basicRevEng/test/test1-input.json"
PDS = findPDS TS
PDS = for f in PDS list {{f,1.0}}
createRevEngJSONOutputModel PDS
toHashTable oo
outputJSON = prettyPrintJSON oo
