{
"task": {
  "method": {
    "id": "REACT",
    "type": "reverseEngineering",
    "description": "this is the reverse engineering method that uses an evolutionary algorithm as optimization method",
    "arguments": [

{"name":"HammingPolyWeight","value":0.5},
{"name":"ComplexityWeight","value":0.2},
{"name":"RevEngWeight","value":0.2},
{"name":"BioProbWeight","value":0.1},
{"name":"HammingModelWeight","value":0.35},
{"name":"PolyScoreWeight","value":0.65},
{"name":"GenePoolSize","value":100},
{"name":"NumCandidates","value":55},
{"name":"NumParentsToPreserve","value":5},
{"name":"MaxGenerations","value":100},
{"name":"StableGenerationLimit","value":50},
{"name":"MutateProbability","value":0.50},

{"name":"priorBiologicalNetwork", 
 "value":[ [1, 2, 2, 2, 2],
           [0, 1, 0, 1, 1],
           [1, 1, 0, 0, 2],
           [0, 1, 2, 0, 3]]}

		]
    },


  "input": [{
	         "type":"model",
	         "description": "Polynomial model generated by a previously applied reverse-engineering method",
		  "name": "priorReverseEngineeringNetwork",
		 "fieldCardinality": 2,
	          "variableScores": [{
		      "target": "x1",
	              "sources": [
				{ "source": "x1", "score": 0.50 },
		            	{ "source": "x2", "score": 1 },
		            	{ "source": "x3", "score": 1 },
                                { "source": "x4", "score": 1 }
        	  		]
		          },
          	  	  {
		      "target": "x2",
		      "sources": [
				{ "source": "x2", "score": 1 },
				{ "source": "x4", "score": 1 }
				]
		          },
                          {
		      "target": "x3",
		      "sources": [
				{ "source": "x1", "score": 0.50 },
				{ "source": "x2", "score": 0.50 }
				]
		          },
		          {
		      "target": "x4",
		      "sources": [
				{ "source": "x2", "score": 0.33 },
				{ "source": "x3", "score": 0.66 }
				]
 		      }]

		},


	     {
	        "type":"model",
	        "description": "Polynomial model generated by a previously applied reverse-engineering method",
		  "name": "priorModel",
		 "fieldCardinality": 2,
		  "updateRules": [{
			"target":"x1",
		        "functions": [{
		            "inputVariables": ["x1","x2"],
		            "polynomialFunction": "x1*x2"
		          }]
                  },
          	  	  {
		      "target": "x2",
		      "functions": [{
		            "inputVariables": ["x1"],
		            "polynomialFunction": "x1+1"
		          },
                          {
		            "inputVariables": ["x1","x2"],
		            "polynomialFunction": "x1*x2"
		          }]
		          },
		          {
		      "target": "x3",
		      "functions": [{
		            "inputVariables": ["x1","x2","x3"],
		            "polynomialFunction": "x3^2+x1"
 		          }]
 		          },

                  {
			"target":"x4",
		        "functions": [{
		            "inputVariables": ["x1","x3"],
		            "polynomialFunction": "x3^2+x1+x2"
		          }]
                  },
	    

       		{
		   "type": "timeSeries",
	           "timeSeriesData": [{
		          "name": "wildtype experiment 1",
		          "index": [],
		          "matrix": [
		              [1,0,0,0],
		              [0,1,0,1],
		              [1,1,0,0]
		            ]
		          },
		          {
		          "name": "wildtype experiment 2",
		          "index": [],
		          "matrix": [
		              [1,1,0,0],
		              [0,0,0,1],
		              [1,0,0,0]
		            ]
		          },
		          {
		          "name": "knockout experiment 1",
		          "index": [1],
		          "matrix": [
		              [0,0,0,0],
		              [0,0,0,1],
		              [0,1,0,0],
		              [0,0,0,1]
		            ]
		          },
		          {
		          "name": "knockout experiment 2",
		          "index": [3],
		          "matrix": [
		              [0,1,0,0],
		              [0,1,0,1],
		              [0,1,0,1],
		              [0,0,0,0]
		            ]
		          },
		          {
		          "name": "knockout experiment 3",
		          "index": [2],
		          "matrix": [
		              [1,0,0,0],
		              [0,0,0,1],
		              [1,0,0,1],
		              [0,0,0,0]
		            ]
		          }
		        ]
		}]
      }

		 ]
	}
}